# name: Node.js CI with MySQL

# on:
#   pull_request:
#     branches: ["main"]

# jobs:
#   CI:
#     runs-on: ubuntu-latest
#     env:  
#       NODE_ENV: ${{ secrets.NODE_ENV }}
#       DB_HOST: 127.0.0.1  
#       DB_USER: ${{ secrets.DB_USER }}
#       DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#       DB_NAME: ${{ secrets.DB_NAME }}
#       DB_PORT: ${{ secrets.DB_PORT }}
#       PORT: ${{ secrets.PORT }}

#     services:
#       mysql:
#         image: mysql:latest
#         env:
#           MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
#           MYSQL_DATABASE: ${{ secrets.DB_NAME }}
#         ports:
#           - 3306:3306
#         options: >-
#           --health-cmd="mysqladmin ping --silent"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=15

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Use Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20.13.1"

#       - name: Install Dependencies
#         run: npm install

#       - name: Verify Database Connection
#         run: |
#           sudo apt-get install -y mysql-client
#           mysql -h 127.0.0.1 -P "$DB_PORT" -u "$DB_USER" -p"$DB_PASSWORD" -e "SHOW DATABASES;"
          
#       - name: Run Tests
#         run: npm test


name: Node.js CI with MySQL

on:
  pull_request:
    branches: ["main"]

jobs:
  CI:
    runs-on: ubuntu-latest
    env:  
      NODE_ENV: ${{ secrets.NODE_ENV }}
      DB_HOST: ${{secrets.DB_HOST}} 
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{secrets.DB_PORT}}
      PORT: ${{ secrets.PORT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.13.1"

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server mysql-client
          sudo systemctl start mysql
          sudo systemctl enable mysql
          mysql --version

      - name: Configure MySQL
        run: |
          sudo mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS \`${{ secrets.DB_NAME }}\`;"

      - name: Restart MySQL and Verify Connection
        run: |
          sudo systemctl restart mysql
          sudo systemctl status mysql --no-pager
          mysql -h "$DB_HOST" -P "$DB_PORT" -u"${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASSWORD }}" -e "SHOW DATABASES;"

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test
